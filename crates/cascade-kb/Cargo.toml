[package]
name = "cascade-kb"
version = "0.1.0"
edition = "2021"
description = "Knowledge Base for Cascade application and component definitions"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "cascade_kb"
path = "src/lib.rs"

[dependencies]
# Async Runtime & Utilities
tokio = { version = "1", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# Error Handling
thiserror = "1"
anyhow = "1.0"

# Types & Utils
uuid = { version = "1", features = ["serde", "v4"] }
chrono = { version = "0.4", features = ["serde"] }

# Logging & Telemetry
tracing = { version = "0.1", features = ["attributes", "async-await"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-futures = "0.2"

# Concurrency
parking_lot = "0.12"

# Testing and mocking
mockall = { version = "0.11", optional = true }
wiremock = { version = "0.5", optional = true }

# API server dependencies
axum = { version = "0.6", optional = true }
tower-http = { version = "0.4", features = ["cors", "trace"], optional = true }

# The following are only used when the adapters feature is enabled
neo4rs = { version = "0.7.0", optional = true }
async-openai = { version = "0.18", optional = true }
reqwest = { version = "0.11", features = ["json"], optional = true }
cascade-interfaces = { path = "../cascade-interfaces", optional = true }

# Environment Variables
dotenv = "0.15.0"

# Test Utilities
fake = { version = "2.5", features = ["uuid", "chrono"] }
rand = "0.8"
tempfile = "3.3"


[dev-dependencies]
# Testing Framework
tokio-test = "0.4"
test-log = { version = "0.2", features = ["trace"] }
pretty_assertions = "1.3"
mockall = "0.11" # Always available in tests
wiremock = "0.5"

# Environment Variables
dotenv = "0.15"

# Test Utilities
fake = { version = "2.5", features = ["uuid", "chrono"] }
rand = "0.8"
tempfile = "3.3"


[features]
default = ["mocks", "adapters"]  # Enable mocks by default for easier testing
# Features based on the detailed spec
test-utils = ["mockall"] # Enable test utilities in main crate
mocks = ["test-utils", "mockall"] # Enables mock implementations for testing without external dependencies
integration-tests = ["adapters"] # Feature flag for running tests that require external services
adapters = ["neo4rs", "async-openai", "reqwest", "cascade-interfaces"] # Enable adapter implementations for concrete StateStore and EmbeddingGenerator
embed-openai = ["adapters", "async-openai"] # Specific OpenAI embedding implementation
state-neo4j = ["adapters", "neo4rs"] # Specific Neo4j state store implementation
remote-kb = ["adapters", "reqwest", "wiremock"] # Specific remote KB client implementation
api-server = ["axum", "tower-http"] # Enable API server for remote mode testing
neo4rs = ["dep:neo4rs"]
async-openai = ["dep:async-openai"]

# Enables full documentation in generated docs
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[bin]]
name = "kb-api-server"
path = "src/bin/kb-api-server.rs"
required-features = ["api-server", "adapters"]
