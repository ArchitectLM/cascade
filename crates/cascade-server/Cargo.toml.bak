[package]
name = "cascade-server"
version = "0.1.0"
edition = "2021"
description = "The main application server for the Cascade Platform."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tokio = { workspace = true, features = ["sync", "signal", "fs"] } # signal - graceful shutdown
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
reqwest = { workspace = true, features = ["json", "multipart"] }
axum = { version = "0.7", features = ["macros"] }
tower = { version = "0.4", features = ["util"] }  # Service abstraction, util feature for ServiceExt
tower-http = { version = "0.4", features = ["trace"] }  # HTTP middleware
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
config = "0.13"
async-trait = "0.1" # For Test Server
dashmap = "5.5.0"  # For concurrent caching
base64 = "0.13.0"  # For content encoding/decoding
redis = { version = "0.22.3", features = ["tokio-comp", "connection-manager"], optional = true }
lru = "0.12.0"     # For LRU caching

# Workspace crates
cascade-core = { path = "../cascade-core", features = ["state_postgres"] } # Or remove and just depend directly on extern dep
cascade-dsl = { path = "../cascade-dsl" }
cascade-stdlib = { path = "../cascade-stdlib", optional = true }
cascade-content-store = { path = "../cascade-content-store" }
cascade-monitoring = { path = "../cascade-monitoring" }  # Add monitoring crate
uuid = { version = "1", features = ["v4"] }
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres"], optional = true }
chrono = "0.4.40"

[dev-dependencies]
wiremock = "0.5" # HTTP
tracing-subscriber = { workspace = true, features = ["env-filter"] }
mockall = "0.12"
rand = "0.8.5"

[features]
default = ["postgres", "stdlib"]
postgres = ["dep:sqlx"]
stdlib = ["dep:cascade-stdlib"]
redis = ["dep:redis"]
e2e_tests = []
